// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum ROLE {
  Admin
  User
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  contents  Content[]
  role      ROLE      @default(User)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Content {
  id        String       @id @unique @default(uuid())
  title     String
  slug      String       @unique @default("")
  content   String
  coverImg  String
  authorId  String
  author    User         @relation(fields: [authorId], references: [id])
  tags      ContentTag[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Tag {
  id      String       @id @default(uuid())
  name    String       @unique
  content ContentTag[]
}

model ContentTag {
  contentId String
  tagId     String
  content   Content @relation(fields: [contentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tag       Tag     @relation(fields: [tagId], references: [id])

  @@id([contentId, tagId])
}

model Assistant {
  id         String @id @unique @default(uuid())
  name       String
  kode       String @unique
  major      String
  university String
  imageUrl   String
  divisi     String
  role       String
  instagram  String
  linkedin   String
  github     String
}
